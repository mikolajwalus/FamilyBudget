@using FamilyBudget.Client.Helpers;
@using FamilyBudget.Shared.Budget;

@page "/ManageBudgets"

<PageTitle>Manage budgets</PageTitle>

<h3 class="py-3">Manage budgets</h3>

@if(UserBudgets is null)
{
    <p>Loading...</p>
}
else
{
    <RadzenDataGrid AllowAlternatingRows="false" AllowFiltering="true" AllowPaging="true" PageSize="5" AllowSorting="true"
                Data="@UserBudgets" TItem="BudgetDto" ShowPagingSummary="true">
        <Columns>
            <RadzenDataGridColumn TItem="BudgetDto" Property="Name" Title="Name" Width="200px" />
            <RadzenDataGridColumn TItem="BudgetDto" Property="Balance" Title="Balance" Width="200px">
                <Template Context="budget">
                    <span class="@TextHelpers.GetTextColorBasedOnValue(budget.Balance)">
                        @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:C}", budget.Balance)
                    </span>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="BudgetDto" Width="200px" Filterable="false"
                Sortable="false">
                <Template Context="budget">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium"
                              Click="@(args => Edit(budget.Id))" @onclick:stopPropagation="true">
                    </RadzenButton>
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" Text="See details"  Class="my-1 ms-1"
                              Click="@(args => ToDashboard(budget.Id))" @onclick:stopPropagation="true">
                    </RadzenButton>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
    <div class="py-3">
        <RadzenButton ButtonStyle="ButtonStyle.Primary" Text="Add budget" Class="my-1 ms-1" 
        Click="@(args => Add())" @onclick:stopPropagation="true"/>
    </div>
}
